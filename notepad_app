
main.dart code

import 'package:flutter/material.dart';
import 'package:urraand3/notes_screen.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
        debugShowCheckedModeBanner: false,
      title: 'Flutter Demo',
      theme: ThemeData(


        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true,
      ),
      home: const NotesScreen()
    );
  }
}
===================================================

notes_screen.dart  Second Screen code

import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'add_notes.dart';  // Ensure the correct import path for your AddNotes file.
import 'model.dart';      // Ensure the correct import path for your Notes model file.

class NotesScreen extends StatefulWidget {
  const NotesScreen({super.key});

  @override
  State<NotesScreen> createState() => _NotesScreenState();
}

class _NotesScreenState extends State<NotesScreen> {
  List<Notes> list = [];
  late SharedPreferences sharedPreferences;

  @override
  void initState() {
    super.initState();
    getData();
  }

  getData() async {
    sharedPreferences = await SharedPreferences.getInstance();
    List<String>? stringList = sharedPreferences.getStringList('list');
    if (stringList != null) {
      setState(() {
        list = stringList.map((item) => Notes.fromMap(jsonDecode(item))).toList();
      });
    }
  }

  saveData() async {
    List<String> stringList = list.map((note) => jsonEncode(note.toMap())).toList();
    await sharedPreferences.setStringList('list', stringList);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.blue,
        title: const Center(child: Text("Notes App")),
      ),
      body: list.isNotEmpty
          ? ListView.builder(
        itemCount: list.length,
        itemBuilder: (context, index) {
          final note = list[index];
          return ListTile(
            leading: CircleAvatar(
              child: Text('${index + 1}'),
            ),
            title: Text(note.title),
            subtitle: Text(note.description),
            trailing: IconButton(
              onPressed: () {
                setState(() {
                  list.removeAt(index);
                  saveData();
                });
              },
              icon: const Icon(Icons.delete_forever_outlined, color: Colors.red),
            ),
          );
        },
      )
          : const Center(
        child: Text("No notes available. Add some!"),
      ),
      floatingActionButton: FloatingActionButton(
        child: const Icon(Icons.add),
        onPressed: () async {
          final newNote = await Navigator.push(
            context,
            MaterialPageRoute(builder: (context) => const AddNotes()),
          );
          if (newNote != null && newNote is Notes) {
            setState(() {
              list.add(newNote);
              saveData();
            });
          }
        },
      ),
    );
  }
}
=================================

add_notes  third screen

import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:urraand3/model.dart';

import 'notes_screen.dart';

class AddNotes extends StatefulWidget {
  const AddNotes({super.key});

  @override
  State<AddNotes> createState() => _AddNotesState();
}

class _AddNotesState extends State<AddNotes> {
  TextEditingController title = TextEditingController();
  TextEditingController description = TextEditingController();

  List<Notes> list = [];
  late SharedPreferences sharedPreferences;

  getData() async {
    sharedPreferences = await SharedPreferences.getInstance();
    List<String>? stringList = sharedPreferences.getStringList('list');
    if (stringList != null) {
      list = stringList.map((item) => Notes.fromMap(jsonDecode(item))).toList();
    }
  }

  @override
  void initState() {
    getData();
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        centerTitle: true,
        title: Text('Add Notes'),
      ),
      body: Column(
        children: [
          Container(
            padding: EdgeInsets.all(10),
            margin: EdgeInsets.symmetric(vertical: 50, horizontal: 30),
            height: 300,
            width: double.infinity,
            decoration: BoxDecoration(
              borderRadius: BorderRadius.circular(20),
              border: Border.all(color: Colors.blueAccent, width: 2),
            ),
            child: Column(
              children: [
                TextField(
                  controller: title,
                  maxLines: 1,
                  style: TextStyle(fontWeight: FontWeight.bold, fontSize: 25),
                  decoration: InputDecoration(
                    hintText: "Title",
                    border: InputBorder.none,
                  ),
                ),
                TextField(
                  controller: description,
                  maxLines: 5,
                  decoration: InputDecoration(
                    hintText: "Description",
                    border: InputBorder.none,
                  ),
                ),
              ],
            ),
          ),
          InkWell(
            onTap: () {
              // Adding new note to the list
              list.insert(
                0,
                Notes(
                  title: title.text,
                  description: description.text,
                ),
              );

              // Converting list of Notes to a list of JSON strings
              List<String> stringList =
              list.map((item) => jsonEncode(item.toMap())).toList();

              // Saving updated list to SharedPreferences
              sharedPreferences.setStringList('list', stringList);

              // Navigating to NotesScreen
              Navigator.pushReplacement(
                context,
                MaterialPageRoute(builder: (context) => NotesScreen()),
              );
            },
            child: Container(
              height: 50,
              width: double.infinity,
              margin: EdgeInsets.symmetric(horizontal: 30),
              decoration: BoxDecoration(
                color: Colors.blueAccent,
                borderRadius: BorderRadius.circular(10),
              ),
              child: Center(
                child: Text(
                  'Save',
                  style: TextStyle(color: Colors.white, fontSize: 15),
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }
}

==================

model.dart  code here

class Notes {
  String title;
  String description;

  Notes({required this.title, required this.description});

  // Corrected named constructor
  Notes.fromMap(Map<String, dynamic> map)
      : title = map["title"],
        description = map["description"];

  // Method to convert Notes object to Map
  Map<String, dynamic> toMap() {
    return {
      "title": title,
      "description": description,
    };
  }
}
============================================
